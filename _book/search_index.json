[
["intro.html", "Calidad del aire en Gijón 1 Introducción", " Calidad del aire en Gijón Sergio Berdiales 1 Introducción Los objetivos principales de este proyecto son realizar análisis y visualizaciones de los datos de la estaciones oficiales de monitorización de la calidad del aire de la ciudad de Gijón. Este proyecto es hermano de este otro https://bookdown.org/sergioberdiales/tfm-kschool_gijon_air_pollution/, que fue mi trabajo final del Máster de Data Science en Kschool. En él, además de tratar los datos y realizar distintos ejercicios de visualización de los mismos (ver visualizaciones en Tableau Public), realicé diversos aproximaciones al problema de predicción (hasta 24 horas) de niveles de contaminación en la ciudad de Gijón (consultar aquí). Mi intención es continuar este proyecto de modelado de predicciones en un futuro próximo. Según vaya avanzando en ello iré incluyendo actualizaciones en este libro. Este es un trabajo en curso. Cualquier sugerencia o aportación para mejorarlo será muy bienvenida. "],
["los-datos.html", "2 Los datos", " 2 Los datos Los datos utilizados los he obtenido de la página web de trasparencia del ayuntamiento de Gijón https://transparencia.gijon.es/. The data can be downloaded from here: I downloaded 19 csv files with air pollution and weather data of Gijón from years 2000 to 2018. I saved them in the “data” project folder. I downloaded two more files from this web, a csv file with the description of the variables and another csv file with information about the measurement stations. All the data files are in the Github repository project, except the final dataset in csv format, because the Github file size limits (but there is a rds version of this file in the project folder “data_rds”). Image source: “Informe de calidad del aire del Principado de Asturias (2016)”. These are the original fields from the 18 csv files downloaded: Estación: Station id. Título: Station name. latitud: Latitude. longitud: Longitude. date_time_utc: Date Time UTC. date_time_utc: Date Time UTC. SO2: SO2 concentration (µg/m³). NO: NO concentration (µg/m³). NO2: NO2 concentration (µg/m³). CO: NO2 concentration (mg/m³). PM10: Particulate Matter (&lt;10 µg/m³). O3: Ozone concentration (µg/m³). dd: Wind direction (degrees). vv: Wind speed (m/s). TMP: Dry temperature (ºC). HR: Relative humidity (%rh). PRB: Atmospheric pressure (mb). RS: Solar radiation (W/m²). LL: Rainfall (l/m²). BEN: Benzene concentration (µg/m³). TOL: Toluene concentration (µg/m³). MXIL: M-Xylene (µg/m³). PM25: Particulate Matter (&lt;2.5 µg/m³). And these are the fields of the final file ‘air_data_2.csv’ (or ‘air_data_2.rds’): station: Station id. station_name: Station name. latitude: Latitude. longitude: Longitude. date_time_utc: Date Time UTC. SO2: SO2 concentration (µg/m³). NO: NO concentration (µg/m³). NO2: NO2 concentration (µg/m³). CO: NO2 concentration (mg/m³). PM10: Particulate Matter (&lt;10 µg/m³). O3: Ozone concentration (µg/m³). dd: Wind direction (degrees). vv: Wind speed (m/s). TMP: Dry temperature (ºC). HR: Relative humidity (%rh). PRB: Atmospheric pressure (mb). RS: Solar radiation (W/m²). LL: Rainfall (l/m²). BEN: Benzene concentration (µg/m³). TOL: Toluene concentration (µg/m³). MXIL: M-Xylene (µg/m³). PM25: Particulate Matter (&lt;2.5 µg/m³). station_alias: Station alias (new variable). year: Year (new variable). month: Month (new variable). week_day: Week day (new variable). hour: Hour of the day (new variable). date: Date YYYY-MM-DD (new variable). lab: lab = working day / no_lab = no working day. wd: Wind direction in factor format. "],
["visualizaciones.html", "3 Visualizaciones", " 3 Visualizaciones Cargamos paquetes library(tidyverse) library(bookdown) library(rmarkdown) library(readr) library(dplyr) library(tidyr) library(purrr) library(lubridate) library(ggplot2) library(stringr) library(knitr) #library(xts) #library(zoo) #library(gridExtra) #library(fpp2) #library(RcppRoll) #library(kableExtra) options(knitr.table.format = &quot;html&quot;) Cargamos los datos air_data_2 &lt;- readRDS(&quot;data_rds/air_data_2.rds&quot;) Echamos un vistazo a las variables glimpse(air_data_2) ## Observations: 722,768 ## Variables: 31 ## $ station &lt;fct&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ... ## $ station_name &lt;fct&gt; Estación Avenida Constitución, Estación Avenida ... ## $ latitude &lt;dbl&gt; 43.52981, 43.52981, 43.52981, 43.52981, 43.52981... ## $ longitude &lt;dbl&gt; -5.673428, -5.673428, -5.673428, -5.673428, -5.6... ## $ date_time_utc &lt;dttm&gt; 2000-01-01 00:00:00, 2000-01-01 01:00:00, 2000-... ## $ SO2 &lt;dbl&gt; 23, 29, 40, 50, 39, 39, 40, 43, 38, 39, 48, 66, ... ## $ NO &lt;dbl&gt; 89, 73, 53, 46, 35, 26, 27, 37, 30, 32, 33, 35, ... ## $ NO2 &lt;dbl&gt; 65, 60, 57, 53, 50, 49, 51, 48, 46, 39, 36, 39, ... ## $ CO &lt;dbl&gt; 1.97, 1.61, 1.13, 1.06, 0.95, 0.82, 0.83, 0.88, ... ## $ PM10 &lt;dbl&gt; 53, 63, 56, 58, 50, 50, 57, 53, 40, 53, 54, 52, ... ## $ O3 &lt;dbl&gt; 9, 8, 7, 5, 6, 7, 7, 4, 5, 6, 10, 9, 11, 9, 18, ... ## $ wd &lt;dbl&gt; 245, 222, 228, 239, 244, 218, 240, 248, 244, 235... ## $ ws &lt;dbl&gt; 0.34, 1.06, 0.71, 0.84, 0.89, 0.71, 0.80, 1.11, ... ## $ TMP &lt;dbl&gt; 5.7, 5.4, 5.3, 5.1, 4.6, 4.6, 4.5, 4.1, 3.8, 3.8... ## $ HR &lt;dbl&gt; 76, 73, 72, 71, 72, 69, 68, 69, 70, 70, 64, 59, ... ## $ PRB &lt;dbl&gt; 1026, 1025, 1025, 1025, 1024, 1024, 1024, 1026, ... ## $ RS &lt;dbl&gt; 33, 33, 33, 33, 33, 33, 33, 33, 35, 112, 171, 36... ## $ LL &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ... ## $ BEN &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ... ## $ TOL &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ... ## $ MXIL &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ... ## $ PM25 &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ... ## $ station_alias &lt;fct&gt; Constitucion, Constitucion, Constitucion, Consti... ## $ year &lt;dbl&gt; 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, ... ## $ month &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ... ## $ date &lt;date&gt; 2000-01-01, 2000-01-01, 2000-01-01, 2000-01-01,... ## $ week_day &lt;dbl&gt; 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, ... ## $ hour &lt;int&gt; 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14... ## $ holiday_type &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ... ## $ no_lab_days &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ... ## $ wd_code &lt;fct&gt; WS, SW, SW, WS, WS, SW, WS, WS, WS, SW, SW, SW, ... Obtenemos las medias anuales de todos los contaminantes por estación y las plasmamos en un gráfico para observar sus evoluciones # Calculamos las medias anuales year_avgs &lt;- air_data_2 %&gt;% select(station_alias, date_time_utc, PM10, PM25, SO2, NO2, NO, O3, BEN, CO, MXIL, TOL) %&gt;% group_by(station_alias, year = year(date_time_utc)) %&gt;% summarise_all(funs(mean(., na.rm = TRUE))) %&gt;% select(-date_time_utc) # We drop this variable # Convertimos los resultados a formato largo year_avgs_long &lt;- gather(year_avgs, contaminante, value, 3:length(year_avgs)) %&gt;% filter(!(grepl(&#39;Constit&#39;, station_alias) &amp; year == &#39;2006&#39; &amp; contaminante %in% c(&#39;BEN&#39;, &#39;MXIL&#39;, &#39;TOL&#39;))) %&gt;% # We filter this data because is only completed in 0.01% filter(!(grepl(&#39;Constit&#39;, station_alias) &amp; year == &#39;2008&#39; &amp; contaminante == &#39;PM25&#39;)) # We filter this data because is only completed in 0.02% # Finalmente representamos los indicadores generados en una tabla de gráficos ggplot(year_avgs_long, aes(x = year, y = value)) + geom_line() + facet_grid(contaminante~station_alias,scales=&quot;free_y&quot;) + theme(axis.text = element_text(size = 6)) Nos quedamos sólo con el contaminante PM10 year_avgs_long_pm10 &lt;- year_avgs_long %&gt;% filter(contaminante == &quot;PM10&quot;, station_alias != &quot;Montevil&quot;) ggplot(year_avgs_long_pm10, aes(x = year, y = value)) + geom_line() + facet_grid(contaminante~station_alias,scales=&quot;free_y&quot;) + theme(axis.text = element_text(size = 6)) + ylim(0, 100) ggplot(year_avgs_long_pm10, aes(x = year, y = value, group = station_alias, color = station_alias)) + geom_line() + ylim(0, 100) "]
]
